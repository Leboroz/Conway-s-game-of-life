{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Projects/newApp/newapp/src/components/Menu.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { run } from \"../functions/run\";\nimport { makeBoard } from \"../functions/makeBoard\";\nimport Popup from './Popup';\nimport { patterns } from \"../functions/patterns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst useInterval = (callback, delay) => {\n  _s();\n\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport const Menu = ({\n  board\n}) => {\n  _s2();\n\n  let [currentBoard, setBoard] = board;\n  let [counter, setCounter] = useState(0);\n  let [delay, setDelay] = useState(null);\n  let [running, setRun] = useState(false);\n  const speeds = [1000, 500, 100];\n\n  const handleClickPattern = e => {\n    setBoard(patterns[e.target.id]);\n  };\n\n  const handleClickMenu = e => {\n    switch (e.target.id) {\n      case \"Start\":\n        setDelay(running ? null : speeds[1]);\n        setRun(!running);\n        break;\n\n      case \"Randomize\":\n        setCounter(0);\n        setBoard(makeBoard(-1));\n        break;\n\n      case \"Clear Board\":\n        setBoard(makeBoard(0));\n        setCounter(0);\n        setDelay(null);\n        setRun(false);\n        break;\n\n      default:\n        alert(\"no option was selected\");\n    }\n  };\n\n  const patternsButtons = Object.keys(patterns).map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n    id: i,\n    className: \"menuButton\",\n    onClick: handleClickPattern,\n    children: i.replaceAll('_', ' ').toLowerCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this));\n\n  const rules = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Any live cell with fewer than two live neighbours dies, as if by underpopulation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Any live cell with two or three live neighbours lives on to the next generation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Any live cell with more than three live neighbours dies, as if by overpopulation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  useInterval(() => {\n    run(currentBoard, setBoard);\n    setCounter(counter + 1);\n  }, delay);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter-label flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter\",\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), [\"Start\", \"Randomize\", \"Clear Board\"].map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: i,\n      className: \"menuButton\",\n      onClick: handleClickMenu,\n      children: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Popup, {\n      id: \"Rules\",\n      className: \"menuButton\",\n      body: rules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      id: \"Patterns\",\n      className: \"menuButton\",\n      body: patternsButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Menu, \"ZmGSxiQkD/gXo2E0kbjOPG6FNr0=\", false, function () {\n  return [useInterval];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/leonardo/Projects/newApp/newapp/src/components/Menu.js"],"names":["React","useState","useEffect","useRef","run","makeBoard","Popup","patterns","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","Menu","board","currentBoard","setBoard","counter","setCounter","setDelay","running","setRun","speeds","handleClickPattern","e","target","handleClickMenu","alert","patternsButtons","Object","keys","map","i","replaceAll","toLowerCase","rules"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { run } from \"../functions/run\";\nimport { makeBoard } from \"../functions/makeBoard\";\nimport Popup from './Popup';\nimport { patterns } from \"../functions/patterns\";\n\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n\n\n\nexport const Menu = ({ board }) => {\n  \n  let [currentBoard, setBoard] = board\n  let [counter, setCounter] = useState(0);\n  let [delay, setDelay] = useState(null);\n  let [running, setRun] = useState(false);\n  const speeds = [ 1000, 500, 100 ];\n\n  const handleClickPattern = (e) => {\n    setBoard(patterns[e.target.id]);\n  }\n\n  const handleClickMenu = (e) => {\n    switch(e.target.id){\n      case \"Start\":\n        setDelay(running ? null : speeds[1]);\n        setRun(!running);\n        break;\n      case \"Randomize\":\n        setCounter(0);\n        setBoard(makeBoard(-1));\n        break;\n      case \"Clear Board\":\n        setBoard(makeBoard(0));\n        setCounter(0);\n        setDelay(null);\n        setRun(false);\n        break;\n      default:\n        alert(\"no option was selected\");\n    }\n  }\n\n  const patternsButtons = Object\n    .keys(patterns)\n    .map(\n      (i) => \n        <div \n        id={i}\n        className=\"menuButton\" \n        onClick={handleClickPattern}>\n          {i.replaceAll('_', ' ').toLowerCase()}\n        </div>\n    );\n\nconst rules = (\n  <>\n    <h3>Rules</h3>\n      <ul>\n          <li>Any live cell with fewer than two live neighbours dies, as if by underpopulation.</li>\n          <li>Any live cell with two or three live neighbours lives on to the next generation.</li>\n          <li>Any live cell with more than three live neighbours dies, as if by overpopulation.</li>\n          <li>Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.</li>\n      </ul>\n  </>\n)\n  \n  useInterval(() => {\n    run(currentBoard,setBoard);\n    setCounter(counter + 1);\n  }, delay);\n  \n  \n  \n  return (\n    <div className=\"wrapper\">\n      <div className=\"counter-label flex\">\n        <p>Generations</p> \n        <span className=\"counter\">{counter}</span>\n      </div>\n      <div>\n        <i className=\"fas fa-twitter\"></i>\n      </div>\n      {[\"Start\", \"Randomize\", \"Clear Board\"]\n      .map(i => <div id={i} className=\"menuButton\" onClick={handleClickMenu}>{i}</div>)}\n      <Popup id=\"Rules\" className=\"menuButton\" body={rules}/>\n      <Popup id=\"Patterns\" className=\"menuButton\" body={patternsButtons}/>\n    </div>\n  )\n}\nexport default  Menu;"]},"metadata":{},"sourceType":"module"}