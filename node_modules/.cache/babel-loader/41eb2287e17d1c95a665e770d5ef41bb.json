{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Projects/newApp/newapp/src/Menu.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { run } from \"./run\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useInterval = (callback, delay) => {\n  _s();\n\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport const Menu = ({\n  list\n}) => {\n  _s2();\n\n  let [currentBoard, setBoard] = list;\n  let [counter, setCounter] = useState(0);\n  let [delay, setDelay] = useState(1000);\n  let [running, setRun] = useState(true);\n  useInterval(() => {\n    run(currentBoard, setBoard);\n    setCounter(counter + 1);\n  }, delay);\n\n  const handleClickMenu = e => {\n    switch (e.target.id) {\n      case \"Start\":\n        setDelay(running ? null : 1000);\n        setRun(!running);\n        break;\n\n      case \"Rules\":\n        break;\n\n      case \"Randomize\":\n        break;\n\n      case \"Clear Board\":\n        setBoard(makeBoard(0));\n        setCounter(0);\n        setDelay(null);\n        setRun(false);\n        break;\n\n      case \"Patterns\":\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter-label\",\n      children: [\"Generation \", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"counter\",\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), [\"Start\", \"Rules\", \"Randomize\", \"Clear Board\", \"Patterns\"].map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: i,\n      className: \"menuButton\",\n      onClick: handleClickMenu,\n      children: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Menu, \"nvbKUBr65GZ8vy0xUfvGWceFtA4=\", false, function () {\n  return [useInterval];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/leonardo/Projects/newApp/newapp/src/Menu.js"],"names":["React","useState","useEffect","useRef","run","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","Menu","list","currentBoard","setBoard","counter","setCounter","setDelay","running","setRun","handleClickMenu","e","target","makeBoard","map","i"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,GAAT,QAAoB,OAApB;;;AAEA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAAA;;AACvC,QAAMC,aAAa,GAAGL,MAAM,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,aAAa,CAACC,OAAd,GAAwBH,QAAxB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,aAASQ,IAAT,GAAgB;AACdF,MAAAA,aAAa,CAACC,OAAd;AACD;;AACD,QAAIF,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAII,EAAE,GAAGC,WAAW,CAACF,IAAD,EAAOH,KAAP,CAApB;AACA,aAAO,MAAMM,aAAa,CAACF,EAAD,CAA1B;AACD;AACF,GARQ,EAQN,CAACJ,KAAD,CARM,CAAT;AASD,CAhBD;;GAAMF,W;;AAkBN,OAAO,MAAMS,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAG9B,MAAI,CAACC,YAAD,EAAeC,QAAf,IAA2BF,IAA/B;AACA,MAAI,CAACG,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAApC;AACA,MAAI,CAACM,KAAD,EAAQa,QAAR,IAAoBnB,QAAQ,CAAC,IAAD,CAAhC;AACA,MAAI,CAACoB,OAAD,EAAUC,MAAV,IAAoBrB,QAAQ,CAAC,IAAD,CAAhC;AAEAI,EAAAA,WAAW,CAAC,MAAM;AAChBD,IAAAA,GAAG,CAACY,YAAD,EAAcC,QAAd,CAAH;AACAE,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAHU,EAGTX,KAHS,CAAX;;AAKA,QAAMgB,eAAe,GAAIC,CAAD,IAAO;AAC7B,YAAOA,CAAC,CAACC,MAAF,CAASd,EAAhB;AACE,WAAK,OAAL;AACES,QAAAA,QAAQ,CAACC,OAAO,GAAG,IAAH,GAAU,IAAlB,CAAR;AACAC,QAAAA,MAAM,CAAC,CAACD,OAAF,CAAN;AACA;;AACF,WAAK,OAAL;AACE;;AACF,WAAK,WAAL;AACE;;AACF,WAAK,aAAL;AACEJ,QAAAA,QAAQ,CAACS,SAAS,CAAC,CAAD,CAAV,CAAR;AACAP,QAAAA,UAAU,CAAC,CAAD,CAAV;AACAC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,QAAAA,MAAM,CAAC,KAAD,CAAN;AACA;;AACF,WAAK,UAAL;AACE;AAhBJ;AAkBD,GAnBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6CAA0C;AAAM,QAAA,KAAK,EAAC,SAAZ;AAAA,kBAAuBJ;AAAvB;AAAA;AAAA;AAAA;AAAA,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAAC,OAAD,EAAU,OAAV,EAAmB,WAAnB,EAAgC,aAAhC,EAA+C,UAA/C,EACAS,GADA,CACIC,CAAC,iBAAI;AAAK,MAAA,EAAE,EAAEA,CAAT;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAmC,MAAA,OAAO,EAAEL,eAA5C;AAAA,gBAA8DK;AAA9D;AAAA;AAAA;AAAA;AAAA,YADT,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAzCM;;IAAMd,I;UAQXT,W;;;KARWS,I;AA0Cb,eAAgBA,IAAhB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { run } from \"./run\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport const Menu = ({list}) => {\n  \n  \n  let [currentBoard, setBoard] = list\n  let [counter, setCounter] = useState(0);\n  let [delay, setDelay] = useState(1000);\n  let [running, setRun] = useState(true);\n  \n  useInterval(() => {\n    run(currentBoard,setBoard);\n    setCounter(counter + 1);\n  },delay);\n  \n  const handleClickMenu = (e) => {\n    switch(e.target.id){\n      case \"Start\":\n        setDelay(running ? null : 1000);\n        setRun(!running);\n        break;\n      case \"Rules\":\n        break;\n      case \"Randomize\":\n        break;\n      case \"Clear Board\":\n        setBoard(makeBoard(0));\n        setCounter(0);\n        setDelay(null);\n        setRun(false);\n        break;\n      case \"Patterns\":\n        break;\n    }\n  }\n  \n  return (\n    <div className=\"wrapper\">\n      <div className=\"counter-label\">Generation <span class=\"counter\">{counter}</span></div>\n      {[\"Start\", \"Rules\", \"Randomize\", \"Clear Board\", \"Patterns\"]\n      .map(i => <div id={i} className=\"menuButton\" onClick={handleClickMenu}>{i}</div>)}\n    </div>\n  )\n}\nexport default  Menu;"]},"metadata":{},"sourceType":"module"}