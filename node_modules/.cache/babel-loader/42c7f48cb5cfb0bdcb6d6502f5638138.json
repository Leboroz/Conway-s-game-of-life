{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Projects/newApp/newapp/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { run } from \"../functions/run\";\nimport { makeBoard } from \"../functions/makeBoard\";\nimport Popup from './Popup';\nimport { patterns } from \"../functions/patterns\";\nimport { useInterval } from \"../functions/useInterval\";\nimport fontAwesome from 'font-awesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.log(font);\nexport const Menu = ({\n  board\n}) => {\n  _s();\n\n  let [currentBoard, setBoard] = board;\n  let [counter, setCounter] = useState(0);\n  let [delay, setDelay] = useState(null);\n  let [running, setRun] = useState(false);\n  const speeds = [1000, 500, 100];\n\n  const handleClickPattern = e => {\n    if (e.target.id === \"glider_Gun_And_Pulsars\") {\n      setBoard(patterns[e.target.id]);\n      return;\n    }\n\n    let patternsBoard = makeBoard(0);\n    patterns[e.target.id].forEach(i => {\n      patternsBoard[i[0]][i[1]] = 1;\n    });\n    setBoard(patternsBoard);\n    setDelay(speeds[1]);\n    setCounter(0);\n  };\n\n  const handleClickMenu = e => {\n    switch (e.target.id) {\n      case \"Start\":\n        setDelay(running ? null : speeds[1]);\n        setRun(!running);\n        break;\n\n      case \"Randomize\":\n        setCounter(0);\n        setBoard(makeBoard(-1));\n        break;\n\n      case \"Clear Board\":\n        setBoard(makeBoard(0));\n        setCounter(0);\n        setDelay(null);\n        setRun(false);\n        break;\n\n      default:\n        alert(\"no option was selected\");\n    }\n  };\n\n  const patternsButtons = Object.keys(patterns).map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n    id: i,\n    className: \"menuButton\",\n    onClick: handleClickPattern,\n    children: i.replaceAll('_', ' ').toLowerCase()\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this));\n\n  const rules = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Any live cell with fewer than two live neighbours dies, as if by underpopulation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Any live cell with two or three live neighbours lives on to the next generation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Any live cell with more than three live neighbours dies, as if by overpopulation.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n\n  useInterval(() => {\n    run(currentBoard, setBoard);\n    setCounter(counter + 1);\n  }, delay);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter\",\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), [\"Start\", \"Randomize\", \"Clear Board\"].map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: i,\n      className: \"menuButton\",\n      onClick: handleClickMenu,\n      children: i\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Popup, {\n      id: \"Rules\",\n      className: \"menuButton\",\n      body: rules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      id: \"Patterns\",\n      className: \"menuButton\",\n      body: patternsButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"ZmGSxiQkD/gXo2E0kbjOPG6FNr0=\", false, function () {\n  return [useInterval];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/leonardo/Projects/newApp/newapp/src/components/Menu.js"],"names":["React","useState","useEffect","useRef","run","makeBoard","Popup","patterns","useInterval","fontAwesome","console","log","font","Menu","board","currentBoard","setBoard","counter","setCounter","delay","setDelay","running","setRun","speeds","handleClickPattern","e","target","id","patternsBoard","forEach","i","handleClickMenu","alert","patternsButtons","Object","keys","map","replaceAll","toLowerCase","rules"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { run } from \"../functions/run\";\nimport { makeBoard } from \"../functions/makeBoard\";\nimport Popup from './Popup';\nimport { patterns } from \"../functions/patterns\";\nimport {useInterval} from \"../functions/useInterval\";\nimport fontAwesome from 'font-awesome'\nconsole.log(font)\nexport const Menu = ({ board }) => {\n  \n  let [currentBoard, setBoard] = board\n  let [counter, setCounter] = useState(0);\n  let [delay, setDelay] = useState(null);\n  let [running, setRun] = useState(false);\n  const speeds = [ 1000, 500, 100 ];\n\n  const handleClickPattern = (e) => {\n\n    if(e.target.id === \"glider_Gun_And_Pulsars\"){\n      setBoard(patterns[e.target.id]);\n      return;\n    }\n    let patternsBoard = makeBoard(0);\n    patterns[e.target.id].forEach(i => {\n      patternsBoard[i[0]][i[1]] = 1;\n    });\n    setBoard(patternsBoard);\n    setDelay(speeds[1]);\n    setCounter(0);\n  }\n\n  const handleClickMenu = (e) => {\n    switch(e.target.id){\n      case \"Start\":\n        setDelay(running ? null : speeds[1]);\n        setRun(!running);\n        break;\n      case \"Randomize\":\n        setCounter(0);\n        setBoard(makeBoard(-1));\n        break;\n      case \"Clear Board\":\n        setBoard(makeBoard(0));\n        setCounter(0);\n        setDelay(null);\n        setRun(false);\n        break;\n      default:\n        alert(\"no option was selected\");\n    }\n  }\n\n  const patternsButtons = Object\n    .keys(patterns)\n    .map(\n      (i) => \n        <div \n        id={i}\n        className=\"menuButton\" \n        onClick={handleClickPattern}\n        key={i}>\n          {i.replaceAll('_', ' ').toLowerCase()}\n        </div>\n    );\n\n  const rules = (\n    <>\n      <h3>Rules</h3>\n        <ul>\n            <li>Any live cell with fewer than two live neighbours dies, as if by underpopulation.</li>\n            <li>Any live cell with two or three live neighbours lives on to the next generation.</li>\n            <li>Any live cell with more than three live neighbours dies, as if by overpopulation.</li>\n            <li>Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.</li>\n        </ul>\n    </>\n  )\n  \n  useInterval(() => {\n    run(currentBoard,setBoard);\n    setCounter(counter + 1);\n  }, delay);\n  \n  \n  \n  return (\n    <div className=\"wrapper\">\n      <div className=\"counter-label\">\n        <p>Generations</p> \n        <span className=\"counter\">{counter}</span>\n      </div>\n      <div>\n      </div>\n      {[\"Start\", \"Randomize\", \"Clear Board\"]\n      .map(i => <div id={i} className=\"menuButton\" onClick={handleClickMenu} key={i}>{i}</div>)}\n      <Popup id=\"Rules\" className=\"menuButton\" body={rules}/>\n      <Popup id=\"Patterns\" className=\"menuButton\" body={patternsButtons}/>\n    </div>\n  )\n}\nexport default  Menu;"]},"metadata":{},"sourceType":"module"}