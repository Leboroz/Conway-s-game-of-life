{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Projects/newApp/newapp/src/components/Menu.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { run } from \"../functions/run\";\nimport { makeBoard } from \"../functions/makeBoard\";\nimport Rules from './Rules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useInterval = delay => {\n  _s();\n\n  const savedCallback = useRef();\n};\n\n_s(useInterval, \"QtKn/gmTXqWK6SX1zxZBufd9Ei4=\");\n\nexport const Menu = ({\n  board\n}) => {\n  _s2();\n\n  let [currentBoard, setBoard] = board;\n  let [counter, setCounter] = useState(0);\n  let [delay, setDelay] = useState(100);\n  let [running, setRun] = useState(true);\n  const speeds = [1000, 500, 100];\n  useInterval(() => {\n    run(currentBoard, setBoard);\n    setCounter(counter + 1);\n  }, delay);\n\n  const handleClickMenu = e => {\n    switch (e.target.id) {\n      case \"Start\":\n        setDelay(running ? null : speeds[1]);\n        setRun(!running);\n        break;\n\n      case \"Randomize\":\n        setCounter(0);\n        setBoard(makeBoard(-1));\n        break;\n\n      case \"Clear Board\":\n        setBoard(makeBoard(0));\n        setCounter(0);\n        setDelay(null);\n        setRun(false);\n        break;\n\n      case \"Patterns\":\n        break;\n\n      default:\n        alert(\"no option was selected\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter-label flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"counter\",\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), [\"Start\", \"Randomize\", \"Clear Board\", \"Patterns\"].map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: i,\n      className: \"menuButton\",\n      onClick: handleClickMenu,\n      children: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Rules, {\n      id: \"Rules\",\n      className: \"menuButton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Menu, \"riIpLRRHu1vAqlRj4Ui+BDTTyiY=\", false, function () {\n  return [useInterval];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/leonardo/Projects/newApp/newapp/src/components/Menu.js"],"names":["React","useState","useEffect","useRef","run","makeBoard","Rules","useInterval","delay","savedCallback","Menu","board","currentBoard","setBoard","counter","setCounter","setDelay","running","setRun","speeds","handleClickMenu","e","target","id","alert","map","i"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAGA,MAAMC,WAAW,GAAKC,KAAF,IAAY;AAAA;;AAC9B,QAAMC,aAAa,GAAGN,MAAM,EAA5B;AACD,CAFD;;GAAMI,W;;AAIN,OAAO,MAAMG,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAE/B,MAAI,CAACC,YAAD,EAAeC,QAAf,IAA2BF,KAA/B;AACA,MAAI,CAACG,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAApC;AACA,MAAI,CAACO,KAAD,EAAQQ,QAAR,IAAoBf,QAAQ,CAAC,GAAD,CAAhC;AACA,MAAI,CAACgB,OAAD,EAAUC,MAAV,IAAoBjB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMkB,MAAM,GAAG,CAAE,IAAF,EAAQ,GAAR,EAAa,GAAb,CAAf;AAEAZ,EAAAA,WAAW,CAAC,MAAM;AAChBH,IAAAA,GAAG,CAACQ,YAAD,EAAcC,QAAd,CAAH;AACAE,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAHU,EAGRN,KAHQ,CAAX;;AAKA,QAAMY,eAAe,GAAIC,CAAD,IAAO;AAC7B,YAAOA,CAAC,CAACC,MAAF,CAASC,EAAhB;AACE,WAAK,OAAL;AACEP,QAAAA,QAAQ,CAACC,OAAO,GAAG,IAAH,GAAUE,MAAM,CAAC,CAAD,CAAxB,CAAR;AACAD,QAAAA,MAAM,CAAC,CAACD,OAAF,CAAN;AACA;;AACF,WAAK,WAAL;AACEF,QAAAA,UAAU,CAAC,CAAD,CAAV;AACAF,QAAAA,QAAQ,CAACR,SAAS,CAAC,CAAC,CAAF,CAAV,CAAR;AACA;;AACF,WAAK,aAAL;AACEQ,QAAAA,QAAQ,CAACR,SAAS,CAAC,CAAD,CAAV,CAAR;AACAU,QAAAA,UAAU,CAAC,CAAD,CAAV;AACAC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,QAAAA,MAAM,CAAC,KAAD,CAAN;AACA;;AACF,WAAK,UAAL;AACE;;AACF;AACEM,QAAAA,KAAK,CAAC,wBAAD,CAAL;AAlBJ;AAoBD,GArBD;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,kBAA2BV;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,EAQG,CAAC,OAAD,EAAU,WAAV,EAAuB,aAAvB,EAAsC,UAAtC,EACAW,GADA,CACIC,CAAC,iBAAI;AAAK,MAAA,EAAE,EAAEA,CAAT;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAmC,MAAA,OAAO,EAAEN,eAA5C;AAAA,gBAA8DM;AAA9D;AAAA;AAAA;AAAA;AAAA,YADT,CARH,eAUE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAlDM;;IAAMhB,I;UAQXH,W;;;KARWG,I;AAmDb,eAAgBA,IAAhB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { run } from \"../functions/run\";\nimport { makeBoard } from \"../functions/makeBoard\";\nimport Rules from './Rules';\n\n\nconst useInterval = ( delay) => {\n  const savedCallback = useRef();\n}\n\nexport const Menu = ({board}) => {\n  \n  let [currentBoard, setBoard] = board\n  let [counter, setCounter] = useState(0);\n  let [delay, setDelay] = useState(100);\n  let [running, setRun] = useState(true);\n  const speeds = [ 1000, 500, 100 ];\n  \n  useInterval(() => {\n    run(currentBoard,setBoard);\n    setCounter(counter + 1);\n  }, delay);\n  \n  const handleClickMenu = (e) => {\n    switch(e.target.id){\n      case \"Start\":\n        setDelay(running ? null : speeds[1]);\n        setRun(!running);\n        break;\n      case \"Randomize\":\n        setCounter(0);\n        setBoard(makeBoard(-1));\n        break;\n      case \"Clear Board\":\n        setBoard(makeBoard(0));\n        setCounter(0);\n        setDelay(null);\n        setRun(false);\n        break;\n      case \"Patterns\":\n        break;\n      default:\n        alert(\"no option was selected\");\n    }\n  }\n  \n  return (\n    <div className=\"wrapper\">\n      <div className=\"counter-label flex\">\n        <p>Generations</p> \n        <span className=\"counter\">{counter}</span>\n      </div>\n      <div>\n        <i className=\"fas fa-twitter\"></i>\n      </div>\n      {[\"Start\", \"Randomize\", \"Clear Board\", \"Patterns\"]\n      .map(i => <div id={i} className=\"menuButton\" onClick={handleClickMenu}>{i}</div>)}\n      <Rules id=\"Rules\" className=\"menuButton\" />\n    </div>\n  )\n}\nexport default  Menu;"]},"metadata":{},"sourceType":"module"}