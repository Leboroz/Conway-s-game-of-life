{"ast":null,"code":"export const run = (currentBoard, setBoard) => {\n  const findNeightbours = (body, y, x, list) => {\n    let countNeightbours = 0;\n\n    const checkCount = () => {\n      if (countNeightbours === 4) return true;\n      return false;\n    };\n\n    const checkNeightbour = (y, x, list) => {\n      try {\n        if (!list[y][x]) return false;\n      } catch (e) {\n        return false;\n      }\n\n      return true;\n    };\n\n    if (body === 1) {\n      if (checkNeightbour(y - 1, x - 1, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y - 1, x, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y - 1, x + 1, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y, x - 1, list)) {\n        countNeightbours++;\n        if (checkCount()) return false;\n      }\n\n      if (checkNeightbour(y, x + 1, list)) {\n        countNeightbours++;\n        if (checkCount()) return false;\n      }\n\n      if (checkNeightbour(y + 1, x - 1, list)) {\n        countNeightbours++;\n        if (checkCount()) return false;\n      }\n\n      if (checkNeightbour(y + 1, x, list)) {\n        countNeightbours++;\n        if (checkCount()) return false;\n      }\n\n      if (checkNeightbour(y + 1, x + 1, list)) {\n        countNeightbours++;\n        if (checkCount()) return false;\n      }\n\n      return countNeightbours < 2 ? false : true;\n    } else {\n      if (checkNeightbour(y - 1, x - 1, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y - 1, x, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y - 1, x + 1, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y, x - 1, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y, x + 1, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y + 1, x - 1, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y + 1, x, list)) {\n        countNeightbours++;\n      }\n\n      if (checkNeightbour(y + 1, x + 1, list)) {\n        countNeightbours++;\n      }\n\n      if (countNeightbours === 3) return true;\n      return false;\n    }\n  };\n\n  setBoard(currentBoard.map((i, index1, list) => i.map((j, index2) => {\n    if (j === 1) if (!findNeightbours(j, index1, index2, list)) return 0;\n    if (j === 0) if (findNeightbours(j, index1, index2, list)) return 1;\n    return j;\n  })));\n};","map":{"version":3,"sources":["/home/leonardo/Projects/newApp/newapp/src/run.js"],"names":["run","currentBoard","setBoard","findNeightbours","body","y","x","list","countNeightbours","checkCount","checkNeightbour","e","map","i","index1","j","index2"],"mappings":"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","sourcesContent":["export const run = (currentBoard, setBoard) => {\n  \n  const findNeightbours = (body, y, x, list)=>{\n    let countNeightbours = 0;\n  \n    const checkCount = () => {\n      if(countNeightbours === 4) return true;\n      return false;\n    }\n    \n    const checkNeightbour = (y, x, list) => {\n      try{\n        if(!list[y][x]) return false;\n      }catch(e){\n        return false;\n      }\n      return true;\n    }\n    \n    if(body === 1){\n      if(checkNeightbour(y-1,x-1,list)){\n        countNeightbours++;\n      }\n      if(checkNeightbour(y-1,x,list)){\n        countNeightbours++;\n      }\n      if(checkNeightbour(y-1,x+1,list)){\n        countNeightbours++;\n      }\n      if(checkNeightbour(y,x-1,list)){\n        countNeightbours++;\n        if(checkCount()) return false;\n      }\n      if(checkNeightbour(y,x+1,list)){\n        countNeightbours++;\n        if(checkCount()) return false;\n      }\n      if(checkNeightbour(y+1,x-1,list)){\n        countNeightbours++;\n        if(checkCount()) return false;\n      }\n      if(checkNeightbour(y+1,x,list)){\n        countNeightbours++;\n        if(checkCount()) return false;\n      }\n      if(checkNeightbour(y+1,x+1,list)){\n        countNeightbours++;\n        if(checkCount()) return false;\n      }\n      return countNeightbours < 2 ? false : true;\n    }else{\n       if(checkNeightbour((y-1),(x-1),list)){\n        countNeightbours++;\n      }\n      \n      if(checkNeightbour(y-1,x,list)){\n        countNeightbours++;\n      }\n      if(checkNeightbour(y-1,x+1,list)){\n        countNeightbours++;\n      }\n      if(checkNeightbour(y,x-1,list)){\n        countNeightbours++;\n      }\n      if(checkNeightbour(y,x+1,list)){\n        countNeightbours++;\n      }\n      if(checkNeightbour(y+1,x-1,list)){\n        countNeightbours++;\n      }\n      if(checkNeightbour(y+1,x,list)){\n        countNeightbours++;\n      }\n      if(checkNeightbour(y+1,x+1,list)){\n        countNeightbours++;\n      }\n      if(countNeightbours === 3)return true;\n      return false;\n    }\n  }\nsetBoard(currentBoard.map((i, index1, list) =>\n      i.map((j, index2) => {\n        if(j === 1)\n          if(!findNeightbours(j, index1, index2, list))\n            return 0;\n        \n        if(j === 0)\n          if(findNeightbours(j, index1, index2, list))\n            return 1;\n        return j;\n      })\n    )\n  );\n}"]},"metadata":{},"sourceType":"module"}